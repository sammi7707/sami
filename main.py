import requests
import time
from telegram import Bot
from flask import Flask, jsonify

# ุฅุนุฏุงุฏุงุช ุงูุชููู ููุนุฑู ุงูููุงุฉ ูุชููุฌุฑุงู
TELEGRAM_API_TOKEN = '7981996529:AAEHLneABT3QTuDdp3e4rdqgaxb6Tnqe6iE'  # ุงุณุชุจุฏู ุจู ุชููู ุงูุจูุช ูู BotFather
CHANNEL_ID = '@sami09_chart'  # ุงุณุชุจุฏู ุจู ูุนุฑู ููุงุชู ูุซู: @mychannel

# ุฑุงุจุท API ููุญุตูู ุนูู ุจูุงูุงุช ุงูุชุฏุงูู ูู Binance
BINANCE_API_URL = 'https://api.binance.com/api/v3/ticker/24hr'

# ุชููุฆุฉ ุงูุจูุช ุจุงุณุชุฎุฏุงู ุงูุชููู
bot = Bot(token=TELEGRAM_API_TOKEN)

# ุฏุงูุฉ ููุญุตูู ุนูู ุจูุงูุงุช ุญุฌู ุงูุชุฏุงูู ููุฃุฒูุงุฌ ููุงุจู USDT
def get_usdt_pairs(retries=3, wait=5, rate_limit_per_second=1):
    """
    ุฌูุจ ุจูุงูุงุช ุงูุชุฏุงูู ููุฃุฒูุงุฌ ููุงุจู USDT ูู Binance API.
    retries: ุนุฏุฏ ุงููุญุงููุงุช ูู ุญุงูุฉ ูุดู ุงูุงุชุตุงู
    wait: ูุฏุฉ ุงูุงูุชุธุงุฑ ุจุงูุซูุงูู ุจูู ุงููุญุงููุงุช
    rate_limit_per_second: ูุนุฏู ุงูุทูุจุงุช ุงููุณููุญ ุจู ููู ุซุงููุฉ (ูุซุงู: 1 ุทูุจ ูู ุงูุซุงููุฉ)
    """
    last_request_time = time.time() 
    attempt = 0
    while attempt < retries:
        try:
            # ุชุฃุฎูุฑ ุงูุทูุจ ูุถูุงู ุนุฏู ุชุฌุงูุฒ ูุนุฏู ุงูุทูุจุงุช
            current_time = time.time()
            if current_time - last_request_time < 1 / rate_limit_per_second:
                time.sleep(1 / rate_limit_per_second - (current_time - last_request_time))

            # ุงูุชุธุงุฑ ูุจู ูู ูุญุงููุฉ 
            time.sleep(10)  # ุงูุงูุชุธุงุฑ ููุฏุฉ 10 ุซูุงูู ูุจู ูู ูุญุงููุฉ

            response = requests.get(BINANCE_API_URL, timeout=10)
            response.raise_for_status()
            data = response.json()

            # ุชุตููุฉ ุงูุฃุฒูุงุฌ ุงูุชู ุชูุชูู ุจู USDT ููุท
            usdt_pairs = {
                item['symbol']: float(item['volume'])
                for item in data if item['symbol'].endswith('USDT')
            }
            return usdt_pairs

        except requests.RequestException as e:
            print(f"Error fetching data (Attempt {attempt + 1} of {retries}): {e}")
            attempt += 1
            time.sleep(wait)

    print("Failed to fetch data after multiple attempts.")
    return {}

# ุฏุงูุฉ ูุฅุฑุณุงู ุงูุชูุจูู ุฅูู ุชููุฌุฑุงู
def send_alert(coin, volume, multiplier):
    """
    ุฅุฑุณุงู ุฑุณุงูุฉ ุชูุจูู ุฅูู ุชููุฌุฑุงู ุนูุฏ ุชุถุงุนู ุญุฌู ุงูุชุฏุงูู.
    coin: ุงุณู ุงูุนููุฉ
    volume: ุญุฌู ุงูุชุฏุงูู ุงูุญุงูู
    multiplier: ุนุฏุฏ ูุฑุงุช ุงูุชุถุงุนู
    """
    message = f"๐จ ุญุฌู ุงูุชุฏุงูู ูู {coin} ุชุถุงุนู {multiplier} ูุฑุงุช! ุงูุญุฌู ุงูุญุงูู: {volume} USDT"
    bot.send_message(chat_id=CHANNEL_ID, text=message)

# ุฏุงูุฉ ููุฑุงูุจุฉ ุญุฌู ุงูุชุฏุงูู ูุฅุฑุณุงู ุงูุชูุจููุงุช ุนูุฏ ุงูุชุถุงุนู
def monitor_volume():
    """
    ูุฑุงูุจุฉ ุงูุชุบูุฑุงุช ูู ุญุฌู ุงูุชุฏุงูู ูู 5 ุฏูุงุฆูุ ูุฅุฑุณุงู ุชูุจูู ุนูุฏ ุชุถุงุนู ุงูุญุฌู.
    """
    # ุงูุญุตูู ุนูู ุจูุงูุงุช ุงูุญุฌู ุงูุฃูููุฉ
    previous_volumes = get_usdt_pairs()

    # ุงูุชุญูู ูู ุงูุจูุงูุงุช ูู 5 ุฏูุงุฆู
    while True:
        # ุฌูุจ ุจูุงูุงุช ุงูุญุฌู ุงูุญุงููุฉ
        current_volumes = get_usdt_pairs()

        # ุงูุชุญูู ูู ุฃู ุงูุจูุงูุงุช ุบูุฑ ูุงุฑุบุฉ
        if not current_volumes:
            print("No data available. Retrying in 5 minutes.")
            time.sleep(300)
            continue

        # ููุงุฑูุฉ ุงูุจูุงูุงุช ุงูุญุงููุฉ ุจุงูุจูุงูุงุช ุงูุณุงุจูุฉ
        for coin, new_volume in current_volumes.items():
            old_volume = previous_volumes.get(coin, 0)

            # ุงูุชุญูู ุฅุฐุง ุชุถุงุนู ุงูุญุฌู
            if old_volume > 0 and new_volume >= 2 * old_volume:
                multiplier = new_volume // old_volume
                send_alert(coin, new_volume, multiplier)

            # ุชุญุฏูุซ ุญุฌู ุงูุชุฏุงูู ุงูุณุงุจู
            previous_volumes[coin] = new_volume

        # ุงูุงูุชุธุงุฑ ููุฏุฉ 5 ุฏูุงุฆู ูุจู ุงูุฏูุฑุฉ ุงูุชุงููุฉ
        time.sleep(300)

# ุจุฏุก ุชุดุบูู ุงูุจูุช
if __name__ == "__main__":
    monitor_volume()

# ... ุจููุฉ ุงูููุฏ ...

app = Flask(__name__)

@app.route('/get_usdt_pairs')
def get_usdt_pairs_api():
    """
    ุฏุงูุฉ API ููุญุตูู ุนูู ุจูุงูุงุช ุญุฌู ุงูุชุฏุงูู ููุฃุฒูุงุฌ ููุงุจู USDT.
    """
    usdt_pairs = get_usdt_pairs()  # ุงุณุชุฏุนุงุก ุงูุฏุงูุฉ ุงูุญุงููุฉ ููุญุตูู ุนูู ุงูุจูุงูุงุช
    return jsonify(usdt_pairs)  # ุชุญููู ุงูุจูุงูุงุช ุฅูู ุตูุบุฉ JSON

if __name__ == "__main__":
    app.run(debug=True)